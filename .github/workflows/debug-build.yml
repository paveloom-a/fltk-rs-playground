name: Debug Build

on:
  pull_request:
    branches: main

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ${{ matrix.os }}
    name: ${{ ( startsWith(matrix.os, 'ubuntu') && 'Linux' ) ||
              ( startsWith(matrix.os, 'windows') && 'Windows' ) ||
              ( startsWith(matrix.os, 'mac') && 'macOS' ) }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-10.15, ubuntu-18.04]

    steps:
    - name: Download dependencies (Linux only)
      if: ${{ startsWith(matrix.os, 'ubuntu') }}
      run: |
        sudo apt-get update
        sudo apt-get install -y libpango1.0-dev libx11-dev libxext-dev \
                                libxft-dev libxinerama-dev libxcursor-dev \
                                libxrender-dev libxfixes-dev ninja-build \
                                appstream
        sudo wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage -O /usr/local/bin/linuxdeploy
        sudo chmod +x /usr/local/bin/linuxdeploy
    - name: Checkout the repository
      uses: actions/checkout@v2
    - name: Build
      run: |
        cargo lint
        cargo build
        cargo build --release
        if ${{ startsWith(matrix.os, 'windows') }}; then
          mv target/debug/fltk-test.exe fltk-test-debug.exe
          mv target/release/fltk-test.exe .
        else
          mv target/debug/fltk-test fltk-test-debug
          mv target/release/fltk-test .
          strip fltk-test fltk-test-debug
        fi
    - name: Create an AppImage (Linux only)
      if: ${{ startsWith(matrix.os, 'ubuntu') }}
      run: |
        linuxdeploy --appdir AppDir -d assets/fltk-test.desktop -i assets/fltk-test.png -e fltk-test -o appimage
        mv fltk-test*.AppImage fltk-test.AppImage
    - name: Create an App Bundle (macOS only)
      if: ${{ startsWith(matrix.os, 'mac') }}
      run: |
        cargo install cargo-bundle
        cargo bundle
        mv target/debug/bundle/osx/fltk-test.app fltk-test.app
    - name: Upload the binaries
      uses: actions/upload-artifact@v2
      with:
        name: ${{ ( startsWith(matrix.os, 'ubuntu') && 'Linux' ) ||
                  ( startsWith(matrix.os, 'windows') && 'Windows' ) ||
                  ( startsWith(matrix.os, 'macOS') && 'macOS' ) }}
        path: |
          fltk-test-debug
          fltk-test-debug.exe
          fltk-test
          fltk-test.exe
          fltk-test.AppImage
          fltk-test.app
